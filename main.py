import sys
import os
import random
from PyQt6.QtWidgets import QApplication, QMainWindow, QWidget, QGridLayout, QPushButton, QMessageBox, QVBoxLayout, QStackedLayout, QLabel, QHBoxLayout, QTextEdit, QDialog, QSizePolicy # type: ignore
from PyQt6.QtGui import QFont, QPixmap, QIcon # type: ignore
from PyQt6.QtCore import Qt, QTimer # type: ignore


class Minesweeper(QMainWindow):
    def __init__(self, rows=10, cols=10, mines=10):
        super().__init__()
        self.setWindowTitle("–°–ê–ü–ï–†")
        self.rows = rows
        self.cols = cols
        self.mines = mines
        self.buttons = {}
        self.mine_field = [[0 for _ in range(cols)] for _ in range(rows)]
        self.game_over = False
        self.safe_cells_opened = 0
        self.time_elapsed = 0

        self.initUI()
        self.place_mines()

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–π–º–µ—Ä–∞
        self.timer = QTimer(self)
        self.timer.timeout.connect(self.update_timer)
        self.timer.start(1000)  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É

        self.setWindowIcon(QIcon(r"C:\Users\silis\OneDrive\Desktop\prog\mines\149.jpg"))
        self.setFixedSize(self.sizeHint())

    def initUI(self):
        central_widget = QWidget()
        self.setCentralWidget(central_widget)

        # –û—Å–Ω–æ–≤–Ω–æ–π –º–∞–∫–µ—Ç
        self.layout = QVBoxLayout(central_widget)

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å
        self.info_panel = QHBoxLayout()

        # –ú–µ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
        self.timer_label = QLabel("–í—Ä–µ–º—è: 0 s")
        self.timer_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.info_panel.addWidget(self.timer_label)

        # –ú–µ—Ç–∫–∞ –æ—á–∫–æ–≤
        self.score_label = QLabel("–û—á–∫–∏: 0")
        self.score_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.info_panel.addWidget(self.score_label)

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é –ø–∞–Ω–µ–ª—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –º–∞–∫–µ—Ç
        self.layout.addLayout(self.info_panel)

        # –°–µ—Ç–∫–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫
        self.grid_layout = QGridLayout()
        self.layout.addLayout(self.grid_layout)

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ —Å–µ—Ç–∫—É
        for row in range(self.rows):
            for col in range(self.cols):
                button = QPushButton("")
                button.setFixedSize(40, 40)
                button.clicked.connect(lambda checked, r=row, c=col: self.on_button_click(r, c))
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∞–≤–æ–≥–æ –∫–ª–∏–∫–∞
                button.setContextMenuPolicy(Qt.ContextMenuPolicy.CustomContextMenu)
                button.customContextMenuRequested.connect(lambda event, r=row, c=col: self.on_right_click(event, r, c))

                self.buttons[(row, col)] = button
                self.grid_layout.addWidget(button, row, col)

    def update_timer(self):
        if not self.game_over:
            self.time_elapsed += 1
            self.timer_label.setText(f"–í—Ä–µ–º—è: {self.time_elapsed} s")

    def update_score(self):
        score = self.safe_cells_opened
        self.score_label.setText(f"–û—á–∫–∏: {score}")

    def place_mines(self):
        mine_positions = random.sample(range(self.rows * self.cols), self.mines)
        for pos in mine_positions:
            row, col = divmod(pos, self.cols)
            self.mine_field[row][col] = -1
            for r in range(row - 1, row + 2):
                for c in range(col - 1, col + 2):
                    if 0 <= r < self.rows and 0 <= c < self.cols and self.mine_field[r][c] != -1:
                        self.mine_field[r][c] += 1

    def on_button_click(self, row, col):
        if self.game_over:
            return
        if self.mine_field[row][col] == -1:
            self.end_game(False)
        else:
            self.reveal_cells(row, col)
            if self.check_win():
                self.end_game(True)
                   
                
    def on_right_click(self, event, row, col):
        if self.game_over:
            return
        button = self.buttons[(row, col)]
        if button.text() == "":
            button.setText("üö©")
        elif button.text() == "üö©":
            button.setText("")

    def reveal_cells(self, row, col):
        if not (0 <= row < self.rows and 0 <= col < self.cols):
            return
        button = self.buttons[(row, col)]
        if button.isEnabled() and self.mine_field[row][col] >= 0:
            cell_value = self.mine_field[row][col]
            button.setText(str(cell_value) if cell_value > 0 else "")
            button.setStyleSheet(self.get_cell_color(cell_value))
            button.setEnabled(False)
            self.safe_cells_opened += 1
            self.update_score()
            if cell_value == 0:
                for r in range(row - 1, row + 2):
                    for c in range(col - 1, col + 2):
                        self.reveal_cells(r, c)

    def get_cell_color(self, value):
        colors = {
            1: "color: blue;",
            2: "color: green;",
            3: "color: red;",
            4: "color: purple;",
            5: "color: orange;",
        }
        return colors.get(value, "")

    def check_win(self):
        return self.safe_cells_opened == self.rows * self.cols - self.mines

    def end_game(self, won):
        self.game_over = True
        self.timer.stop()
        for row in range(self.rows):
            for col in range(self.cols):
                if self.mine_field[row][col] == -1:
                    self.buttons[(row, col)].setText("üí£")
        score_message = f"–û—á–∫–∏: {self.safe_cells_opened}"
        
        if won:
            self.show_message("–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!", f"–í—ã –Ω–∞—à–ª–∏ –≤—Å–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∫–ª–µ—Ç–∫–∏!")
        else:
            self.show_message("–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞", f"–í—ã –Ω–∞—Ç–∫–Ω—É–ª–∏—Å—å –Ω–∞ –º–∏–Ω—É!")

    def show_message(self, title, message):
        from PyQt6.QtWidgets import QMessageBox
        msg_box = QMessageBox(self)
        msg_box.setWindowTitle(title)
        msg_box.setText(message)
        msg_box.exec()

    
    class Minesweeper(QMainWindow):
     def __init__(self):
        super().__init__()
        self.init_ui()

    def init_ui(self):
        self.setWindowTitle("Minesweeper")
        self.showFullScreen()  # Set the window to fullscreen

        self.central_widget = QWidget()
        self.setCentralWidget(self.central_widget)

        self.grid_layout = QGridLayout(self.central_widget)
        self.create_board(10, 10)  # Example: 10x10 grid

    def create_board(self, rows, cols):
        self.buttons = {}
        for row in range(rows):
            for col in range(cols):
                button = QPushButton('')
                button.setStyleSheet("""
                    QPushButton {
                        font-size: 14px;
                        border: 2px solid #CCCCCC;
                        border-radius: 5px;
                        background-color: #F0F0F0;
                        padding: 5px;
                    }
                    QPushButton:pressed {
                        background-color: #D0D0D0;
                    }
                """)
                button.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
                button.clicked.connect(lambda checked, r=row, c=col: self.on_cell_clicked(r, c))
                self.grid_layout.addWidget(button, row, col)
                self.buttons[(row, col)] = button

    def show_message(self, title, text):
        final_text = f"{text}\n\n–û—á–∫–∏: {self.safe_cells_opened}\n–í—Ä–µ–º—è: {self.time_elapsed} —Å–µ–∫—É–Ω–¥"
        
        msg = QMessageBox(self)
        msg.setIcon(QMessageBox.Icon.Information)
        msg.setIcon(QMessageBox.Icon.NoIcon)
        msg.setWindowTitle(title)
        msg.setText(final_text)
        msg.setStyleSheet("font-size: 14px;")

        replay_button = msg.addButton("–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞", QMessageBox.ButtonRole.ActionRole)
        replay_button.setStyleSheet("""
            QPushButton {
                font-size: 16px;
                font-weight: bold;
                color: #FFFFFF;
                background-color: #4CAF50;
                border: none;
                border-radius: 8px;
                padding: 10px 20px;
            }
            QPushButton:hover {
                background-color: #45A049;
            }
            QPushButton:pressed {
                background-color: #388E3C;
            }
""")

        menu_button = msg.addButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", QMessageBox.ButtonRole.RejectRole)
        menu_button.setStyleSheet("""
            QPushButton {
                font-size: 16px;
                font-weight: bold;
                color: #FFFFFF;
                background-color: #F44336;
                border: none;
                border-radius: 8px;
                padding: 10px 20px;
            }
            QPushButton:hover {
                background-color: #E53935;
            }
            QPushButton:pressed {
                background-color: #D32F2F;
            }
""")

        msg.exec()

        if msg.clickedButton() == replay_button:
            self.restart_game()
        elif msg.clickedButton() == menu_button:
            self.return_to_main_menu()

    def return_to_main_menu(self):
        self.main_menu = MainMenu()
        self.main_menu.show()
        self.close()

    def restart_game(self):
        self.safe_cells_opened = 0
        self.game_over = False
        self.mine_field = [[0 for _ in range(self.cols)] for _ in range(self.rows)]
        self.place_mines()
        
        
        for row in range(self.rows):
            for col in range(self.cols):
                button = self.buttons[(row, col)]
                button.setText("")
                button.setEnabled(True)
        
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–ª–µ—Ç–æ–∫ –∏ —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã
        self.safe_cells_opened = 0
        self.game_over = False

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä
        self.time_elapsed = 0
        self.timer_label.setText(f"–í—Ä–µ–º—è: {self.time_elapsed} s")  # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏

    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–µ —Å –º–∏–Ω–∞–º–∏
        self.mine_field = [[0 for _ in range(self.cols)] for _ in range(self.rows)]
        self.place_mines()

    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ (–æ—á–∏—â–∞–µ–º –∏—Ö –∏ –≤–∫–ª—é—á–∞–µ–º)
        for row in range(self.rows):
            for col in range(self.cols):
                button = self.buttons[(row, col)]
                button.setText("")
                button.setEnabled(True)

    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä
                self.timer.start(1000)  # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä —Å–Ω–æ–≤–∞

class DifficultyMenu(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–í—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏")
        self.setFixedSize(300, 250)  # Slightly taller for better spacing
        
        self.setWindowIcon(QIcon(r"C:\Users\silis\OneDrive\Desktop\prog\mines\149.jpg"))
        
        # Main layout
        layout = QVBoxLayout()
        
        # Title label
        label = QLabel("–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:")
        label.setAlignment(Qt.AlignmentFlag.AlignCenter)  # Center the text
        label.setStyleSheet("font-size: 16px; font-weight: bold; color: #4CAF50;")
        layout.addWidget(label)
        
        # Easy button
        easy_button = QPushButton("–õ—ë–≥–∫–∏–π —É—Ä–æ–≤–µ–Ω—å (5x5)")
        easy_button.setStyleSheet(self.button_style())
        easy_button.clicked.connect(lambda: self.start_game(5, 5, 5))
        layout.addWidget(easy_button)
        
        # Medium button
        medium_button = QPushButton("–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å (9x9)")
        medium_button.setStyleSheet(self.button_style())
        medium_button.clicked.connect(lambda: self.start_game(9, 9, 10))
        layout.addWidget(medium_button)
        
        # Hard button
        hard_button = QPushButton("–¢—è–∂—ë–ª—ã–π —É—Ä–æ–≤–µ–Ω—å (12x12)")
        hard_button.setStyleSheet(self.button_style())
        hard_button.clicked.connect(lambda: self.start_game(12, 12, 20))
        layout.addWidget(hard_button)
        
        # Central widget and layout setup
        central_widget = QWidget()
        central_widget.setLayout(layout)
        self.setCentralWidget(central_widget)
    
    def button_style(self):
        return """
        QPushButton {
            background-color: #4CAF50;
            color: white;
            font-size: 14px;
            font-weight: bold;
            border: 2px solid #4CAF50;
            border-radius: 5px;
            padding: 10px;
            margin: 10px;
        }
        QPushButton:hover {
            background-color: #45a049;
        }
        QPushButton:pressed {
            background-color: #388e3c;
        }
        """
    
    def start_game(self, rows, cols, mines):
        self.game_window = Minesweeper(rows, cols, mines)
        self.game_window.show()
        self.close()


class MainMenu(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–°–∞–ø–µ—Ä")
        self.setGeometry(100, 100, 800, 600)  # –ù–∞—á–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞
        self.setWindowIcon(QIcon(r"C:\Users\silis\OneDrive\Desktop\prog\mines\149.jpg"))

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ–Ω–∞
        self.background_label = QLabel(self)
        self.background_label.setGeometry(0, 0, self.width(), self.height())
        pixmap = QPixmap(r"C:\Users\silis\OneDrive\Desktop\prog\mines\151.jpg")  # –í–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        self.background_label.setPixmap(pixmap)
        self.background_label.setScaledContents(True)  # –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º –ø–æ —Ä–∞–∑–º–µ—Ä—É –æ–∫–Ω–∞

        self.setWindowFlags(self.windowFlags() & ~Qt.WindowType.WindowMaximizeButtonHint)
        
        # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞
        self.setFixedSize(400, 400)  # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞ –ø–æ –≤–∞—à–µ–º—É —É—Å–º–æ—Ç—Ä–µ–Ω–∏—é

        # –°–æ–∑–¥–∞–Ω–∏–µ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–∂–µ—Ç–∞
        self.central_widget = QWidget(self)
        self.setCentralWidget(self.central_widget)
        self.main_layout = QStackedLayout(self.central_widget)

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        self.init_main_menu()

    def init_main_menu(self):
        # –í–∏–¥–∂–µ—Ç –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        main_menu_widget = QWidget()
        outer_layout = QVBoxLayout(main_menu_widget)
        outer_layout.addStretch(1)

        # –ú–∞–∫–µ—Ç –¥–ª—è –∫–Ω–æ–ø–æ–∫
        button_layout = QVBoxLayout()
        button_layout.setAlignment(Qt.AlignmentFlag.AlignCenter)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel("–°–ê–ü–ï–†")
        title_label.setFont(QFont("Arial", 24, QFont.Weight.Bold))
        title_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        title_label.setStyleSheet("""
            color: #D4D4D4;  /* –¢—ë–º–Ω–æ-–∑–µ–ª—ë–Ω—ã–π —Ü–≤–µ—Ç */
""")
        button_layout.addWidget(title_label)

        # –ö–Ω–æ–ø–∫–∞ "–ò–≥—Ä–∞—Ç—å"
        play_button = QPushButton("–ò–≥—Ä–∞—Ç—å")
        play_button.setFixedSize(220, 50)
        play_button.setStyleSheet("""
            QPushButton {
                background: qlineargradient(
                    x1: 0, y1: 0, x2: 0, y2: 1,
                    stop: 0 #43A047, stop: 1 #66BB6A
            );
            color: white;
            border: 2px solid #388E3C;
            border-radius: 8px;
            font-size: 18px;
            font-weight: bold;
            padding: 5px;
        }
        QPushButton:hover {
            background: qlineargradient(
                x1: 0, y1: 0, x2: 0, y2: 1,
                stop: 0 #66BB6A, stop: 1 #81C784
            );
        }
        QPushButton:pressed {
            background-color: #388E3C;
        }
""")
        play_button.clicked.connect(self.open_difficulty_menu)
        button_layout.addWidget(play_button)

        # –î—Ä—É–≥–∏–µ –∫–Ω–æ–ø–∫–∏
        rules_button = QPushButton("–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã")
        rules_button.setFixedSize(220, 50)
        rules_button.setStyleSheet("""
            QPushButton {
                background: qlineargradient(
                    x1: 0, y1: 0, x2: 0, y2: 1,
                    stop: 0 #4CAF50, stop: 1 #81C784
                );
                color: white;
                border: 2px solid #388E3C;
                border-radius: 8px;
                font-size: 18px;
                font-weight: bold;
                padding: 5px;
            }
            QPushButton:hover {
                background: qlineargradient(
                    x1: 0, y1: 0, x2: 0, y2: 1,
                    stop: 0 #81C784, stop: 1 #A5D6A7
                );
            }
            QPushButton:pressed {
                background-color: #388E3C;
            }
""")
        rules_button.clicked.connect(self.show_rules)
        button_layout.addWidget(rules_button)

        exit_button = QPushButton("–í—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã")
        exit_button.setFixedSize(220, 50)
        exit_button.setStyleSheet("""
            QPushButton {
                background: qlineargradient(
                    x1: 0, y1: 0, x2: 0, y2: 1,
                    stop: 0 #E53935, stop: 1 #F44336
                );
                color: white;
                border: 2px solid #C62828;
                border-radius: 8px;
                font-size: 18px;
                font-weight: bold;
                padding: 5px;
            }
            QPushButton:hover {
                background: qlineargradient(
                    x1: 0, y1: 0, x2: 0, y2: 1,
                    stop: 0 #F44336, stop: 1 #E57373
                );
            }
            QPushButton:pressed {
                background-color: #C62828;
            }
""")
        exit_button.clicked.connect(self.close)
        button_layout.addWidget(exit_button)

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–∞–∫–µ—Ç
        outer_layout.addLayout(button_layout)
        outer_layout.addStretch(1)
        self.main_layout.addWidget(main_menu_widget)
        self.main_layout.setCurrentWidget(main_menu_widget)

    def resizeEvent(self, event):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞."""
        pixmap = QPixmap(r"C:\Users\silis\OneDrive\Desktop\prog\mines\151.jpg")  # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        if not pixmap.isNull():
            self.background_label.setGeometry(0, 0, self.width(), self.height())
            scaled_pixmap = pixmap.scaled(
                self.size(), Qt.AspectRatioMode.KeepAspectRatioByExpanding, Qt.TransformationMode.SmoothTransformation
            )
            self.background_label.setPixmap(scaled_pixmap)
        super().resizeEvent(event)
        

    def show_rules(self):
        # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏–≥—Ä—ã
        rules_widget = QWidget()
        layout = QVBoxLayout(rules_widget)
        layout.setContentsMargins(15, 15, 15, 15)

        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        back_button = QPushButton("–ù–∞–∑–∞–¥")
        back_button.setFixedSize(100, 30)
        back_button.setStyleSheet("""
            QPushButton {
                background-color: #4CAF50;
                color: white;
                border-radius: 5px;
                border: 1px solid #388E3C;
            }
            QPushButton:hover {
                background-color: #388E3C;
            }
        """)
        back_button.clicked.connect(self.return_to_main_menu)
        layout.addWidget(back_button, alignment=Qt.AlignmentFlag.AlignLeft)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ "–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã"
        title_label = QLabel("–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã")
        title_label.setFont(QFont("Arial", 16, QFont.Weight.Bold))
        title_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        title_label.setStyleSheet("color: #4CAF50;") 
        layout.addWidget(title_label)

        # –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –ø—Ä–∞–≤–∏–ª
        rules_text = """
        <p><b>–ò–≥—Ä–∞ "–°–∞–ø–µ—Ä" ‚Äî —ç—Ç–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ª–æ–≥–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞, —Ü–µ–ª—å—é –∫–æ—Ç–æ—Ä–æ–π —è–≤–ª—è–µ—Ç—Å—è –æ—á–∏—Å—Ç–∏—Ç—å –º–∏–Ω–Ω–æ–µ –ø–æ–ª–µ, –Ω–µ –ø–æ–¥—Ä—ã–≤–∞—è—Å—å –Ω–∞ –º–∏–Ω–∞—Ö.</b></p>
        <p><b>–ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ:</b> –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —Å–µ—Ç–∫—É –∫–ª–µ—Ç–æ–∫, –ø–æ–¥ –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞—Ö–æ–¥—è—Ç—Å—è –º–∏–Ω—ã. –ú–∏–Ω—ã —Å–∫—Ä—ã—Ç—ã, –∏ –∑–∞–¥–∞—á–∞ –∏–≥—Ä–æ–∫–∞ ‚Äî –Ω–∞–π—Ç–∏ –∏—Ö, –æ—Ç–∫—Ä—ã–≤–∞—è –∫–ª–µ—Ç–∫–∏.</p>
        <p><b>–ù–∞—á–∞–ª–æ –∏–≥—Ä—ã:</b> –í –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã –≤—ã –º–æ–∂–µ—Ç–µ –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ –ª—é–±–æ–π –∫–ª–µ—Ç–∫–µ. –ï—Å–ª–∏ —ç—Ç–æ –º–∏–Ω–∞, –∏–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. –ï—Å–ª–∏ —ç—Ç–æ –ø—É—Å—Ç–∞—è –∫–ª–µ—Ç–∫–∞, –Ω–∞ –Ω–µ–π –ø–æ—è–≤–∏—Ç—Å—è —á–∏—Å–ª–æ, —É–∫–∞–∑—ã–≤–∞—é—â–µ–µ, —Å–∫–æ–ª—å–∫–æ –º–∏–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å–µ–¥–Ω–∏—Ö –∫–ª–µ—Ç–∫–∞—Ö. –ö–ª–µ—Ç–∫–∏ —Å —á–∏—Å–ª–∞–º–∏ –¥–∞—é—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–∞—é—Ç –≤—ã—á–∏—Å–ª–∏—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –º–∏–Ω.</p>
        <p><b>–ß–∏—Å–ª–∞ –∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏–µ:</b> –ß–∏—Å–ª–æ –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–æ–π –∫–ª–µ—Ç–∫–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω, –Ω–∞—Ö–æ–¥—è—â–∏—Ö—Å—è –≤ –≤–æ—Å—å–º–∏ —Å–æ—Å–µ–¥–Ω–∏—Ö –∫–ª–µ—Ç–∫–∞—Ö (–ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏, –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ –∏ –¥–∏–∞–≥–æ–Ω–∞–ª–∏). –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –Ω–∞ –∫–ª–µ—Ç–∫–µ —á–∏—Å–ª–æ "3", —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –≤–æ–∫—Ä—É–≥ —ç—Ç–æ–π –∫–ª–µ—Ç–∫–∏ (–≤ —Å–æ—Å–µ–¥–Ω–∏—Ö 8 –∫–ª–µ—Ç–∫–∞—Ö) —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã —Ç—Ä–∏ –º–∏–Ω—ã.</p>
        <p><b>–§–ª–∞–≥–∏:</b> –ï—Å–ª–∏ –≤—ã –¥—É–º–∞–µ—Ç–µ, —á—Ç–æ –ø–æ–¥ –∫–∞–∫–æ–π-—Ç–æ –∫–ª–µ—Ç–∫–æ–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –º–∏–Ω–∞, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–º–µ—Ç–∏—Ç—å –µ—ë —Ñ–ª–∞–∂–∫–æ–º, –ø—Ä–∞–≤—ã–º —â–µ–ª—á–∫–æ–º –º—ã—à–∏. –≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–µ –∑–∞–±—ã—Ç—å, –≥–¥–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –º–∏–Ω—ã. –û–¥–Ω–∞–∫–æ –±—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã ‚Äî –µ—Å–ª–∏ —Ñ–ª–∞–∂–æ–∫ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω –Ω–∞ –ø—É—Å—Ç–æ–π –∫–ª–µ—Ç–∫–µ, —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—à–∏–±–∫–æ–π.</p>
        <p><b>–°—Ç—Ä–∞—Ç–µ–≥–∏—è:</b> –í–∞–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é, —á—Ç–æ–±—ã –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∏—Å–∫ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–ª–µ—Ç–æ–∫ –Ω–∞—É–≥–∞–¥. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —á–∏—Å–ª–∞ –∏ —Ä–∞–∑–º–µ—â–∞–π—Ç–µ —Ñ–ª–∞–≥–∏, —á—Ç–æ–±—ã –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —Ä–∞—Å–∫—Ä—ã–≤–∞—Ç—å –ø–æ–ª–µ. –°—Ç—Ä–∞—Ç–µ–≥–∏—è —Ç–∞–∫–∂–µ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º–æ–≥–æ "–º–µ—Ç–æ–¥–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è": –µ—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –º–∏–Ω—ã –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å, –≤—ã –º–æ–∂–µ—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —Ç–∞–∫–∏–µ –∫–ª–µ—Ç–∫–∏. –ù–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —É—Ä–æ–≤–Ω—è—Ö –∏–≥—Ä—ã –º–æ–∂–Ω–æ —Å—Ç–æ–ª–∫–Ω—É—Ç—å—Å—è —Å —Å–∏—Ç—É–∞—Ü–∏—è–º–∏, –∫–æ–≥–¥–∞ –±–µ–∑ –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –≤—ã–∫–ª–∞–¥–æ–∫ –Ω–µ–ª—å–∑—è –æ–±–æ–π—Ç–∏—Å—å, –∏ –≤–∞–º –ø—Ä–∏–¥–µ—Ç—Å—è –ø—Ä–∏–Ω—è—Ç—å —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è.</p>
        <p><b>–°–æ–≤–µ—Ç—ã –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤:</b> –ù–µ —Ç–æ—Ä–æ–ø–∏—Ç–µ—Å—å –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∫–ª–µ—Ç–æ–∫. –ù–∞—á–∏–Ω–∞–π—Ç–µ —Å —É–≥–ª–æ–≤ –∏ –∫—Ä–∞–µ–≤ –ø–æ–ª—è ‚Äî –æ–Ω–∏ –æ–±—ã—á–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç –º–µ–Ω—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Å–µ–¥–Ω–∏—Ö –∫–ª–µ—Ç–æ–∫, —á—Ç–æ —Å–Ω–∏–∂–∞–µ—Ç —Ä–∏—Å–∫ –æ—à–∏–±–∫–∏. –°–æ –≤—Ä–µ–º–µ–Ω–µ–º –≤—ã –±—É–¥–µ—Ç–µ –ª—É—á—à–µ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –º–∏–Ω, —É–ª—É—á—à–∞—è —Å–≤–æ—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é.</p>

        <p><i>–£–¥–∞—á–∏!</i></p>
"""

        text_widget = QTextEdit()
        text_widget.setHtml(rules_text)
        text_widget.setReadOnly(True)
        text_widget.setStyleSheet("""
            QTextEdit {
                background-color: #f4f4f9;
                border: 1px solid #ddd;
                border-radius: 5px;
                padding: 15px;
                font-family: Arial;
                font-size: 12pt;
                line-height: 1.6;
                color: #333;
            }
        """)
        
        layout.addWidget(text_widget)

        self.main_layout.addWidget(rules_widget)
        self.main_layout.setCurrentWidget(rules_widget)

    def return_to_main_menu(self):
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é
        self.init_main_menu()

    def open_difficulty_menu(self):
        self.difficulty_menu = DifficultyMenu()
        self.difficulty_menu.show()
        self.close()


if __name__ == "__main__":
    import sys
    app = QApplication(sys.argv)
    main_menu = MainMenu()
    main_menu.show()
    sys.exit(app.exec())
